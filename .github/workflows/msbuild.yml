name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  # BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest
    # strategy:
    #   matrix:
    #     BUILD_CONFIGURATION: [Debug, Release]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build Debug
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Platform=x86 /p:Configuration=Debug ${{env.SOLUTION_FILE_PATH}}
      
    - name: Build Release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Platform=x86 /p:Configuration=Release ${{env.SOLUTION_FILE_PATH}}

    - name: Test
      shell: pwsh
      run: |
        $ErrorActionPreference = 'Stop'

        Invoke-WebRequest https://www.nuget.org/api/v2/package/lua/5.4.6 -OutFile lua-5.4.6.zip
        Expand-Archive -Path .\lua-5.4.6.zip -DestinationPath lua
        Remove-Item -Path lua-5.4.6.zip
        Move-Item -Path .\lua\build\native\bin\Win32\v143\Release\* -Destination .
        Remove-Item -Recurse -Path lua\
        
        Copy-Item -Path Release\*.dll -Destination .

        Remove-Item .\tests\run.lua -ErrorAction SilentlyContinue

        @"
        local lunatest = require('tests.lunatest.lunatest')
        local rps = require("RPS")

        "@ | Add-Content -Path "tests\run.lua"
        Get-Item -Path "tests\test-*.lua" | Resolve-Path -Relative | ForEach-Object {$_.Substring(2)} | ForEach-Object {$_.Substring(0, $_.Length - 4)} | ForEach-Object {"lunatest.suite('$_')"} | ForEach-Object {$_.Replace('\', '.')} |  Add-Content -Path "tests\run.lua"
        "lunatest.run()" | Add-Content -Path "tests\run.lua"


        & .\lua.exe tests\run.lua -v

        Remove-Item *.dll
        Remove-Item *.exe
        Remove-Item .\tests\run.lua

    - name: Create nuget package
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget pack RuntimePatchingSystem.nuspec

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: NuGet # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: "*.nupkg"

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: Release binaries # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: Release/*.dll

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: Debug binaries # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: Debug/*.dll
    - name: Set up nuget source
      if: startsWith(github.ref, 'refs/tags/v')
      run: nuget sources add -Source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -Name github -Username ${{ github.repository_owner }} -Password ${{ github.token }} -StorePasswordInClearText
    - name: Publish Nuget to GitHub registry
      if: startsWith(github.ref, 'refs/tags/v')
      run: nuget push *.nupkg -Source github -SkipDuplicate -NoSymbols 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
